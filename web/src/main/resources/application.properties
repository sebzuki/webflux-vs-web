server.port=${SERVER_PORT:8083}
logging.level.root=${LOGGING_ROOT:INFO}
logging.level.com.exemple=${LOGGING_GIC:INFO}
logging.level.org.springframework.web=${LOGGING_SPRING_WEB:INFO}
logging.level.org.springframework.web.reactive.function.client=TRACE

management.endpoints.web.exposure.include=${MANAGEMENT_EXPOSURE:prometheus,metrics,info,health}

### realm admin
provider.name=keycloak
provider.base-admin=http://192.168.56.1:8080/auth/admin/realms/msa
provider.realm-users-list=${provider.base-admin}/users?briefRepresentation=true&exact=true&username=#USERNAME#
provider.realm-roles-list=${provider.base-admin}/roles
provider.user-roles-admin=${provider.base-admin}/users/#USER_ID#/role-mappings/realm

### base spring oauth2 client config
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://192.168.56.1:8080/auth/realms/msa
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.client-id=realm-management
spring.security.oauth2.client.registration.keycloak.client-secret=1b24166a-8c6c-482a-b864-2603da503737


### Configuration producer Spring/Kafka
spring.kafka.bootstrap-servers=192.168.56.1:9092

spring.kafka.producer.client-id=testseb
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
